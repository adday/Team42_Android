User Story 1 (8PTS): As a game player, I want to be able to choose a level of difficulty for
                    Adventure game, so that the game is more challenging.
    @Acceptance Criteria:
        -The game has at least 2 levels of difficulty: Level 0, the version from prior assignments,
            and Level 1, a new level with additional properties and behaviors.
        -Difficulty level is reflected in at least Rooms and Items.
        -The game doesn't crash or fail, and all commands work properly with each of the different
            levels of difficulty.

Split story 1-B (3PTS): As a CS 314 student, I want to add entities and behaviors for at least Level 1
                so that there actually are differences between Level 0 and Level 1.
    @Acceptance Criteria (AC):
        -The game supports at least 2 new entities and 2 new behaviors for Level 1.
        -A description of the other enhancements that your team has made to the Adventure Game is created.
        -UML class diagram(s) of new/changed entities and behaviors are created.
        -If you change the configuration/layout of the cave labyrinth, you must submit a UML object
            diagram (that is, a map) of the new configuration.
        -New tests are written for the new entities and behaviors and pass. Any defects they find are fixed.
        -All previous tests run and pass.
        -Meet 'Definition of Done' (DoD), below.

    @Tasks who*(estimation/actual time):
        ed/all*(2hrs/2hrs) Think up entities & behaviors that would produce different difficulties
        ed*(2hrs/2hr) implement decided changes to levels
        all*(1.5hrs/hrs) Write tests for new level implementation
        all*(1hr/hr) Fix bugs introduced by tests
        all*(2hr/hr) Make UML diagrams of entities and new map if needed
        ed*(1hr/1hr) Add description of changes to overview.txt file
        all*(1hr/.5hr) Ensure that DoD and rubric are both met


---------------------------------------------------------------
@ Definition of Done:
For all user stories:

    - GitHub main branch code runs with no warnings and a user can execute all commands at least using the GUI.
    - All code changes are reviewed before being merged onto the main branch (see A1, tutorial 5
        for instructions on the GitHub Pull Request Code Review System you must use for reviews)
    - All code changes are merged into the main branch

For CS314 development:

    - All work is done on individual branches with frequent commits and pushes to GitHub
        before being merged onto the main branch.
    - Commit messages include user story and task
    - All user stories and point estimates are in GitHub
    - All tasks and time estimates and actual time taken are in GitHub
    - The overview.txt file for A5 has all required items in it