User Story 1 (10 PTS): As a game player, I want an improved GUI for the Adventure game,
                so that I can play the game on an Android device.

    @Acceptance Criteria:
        -The game works on an Android device emulation, or an actual Android device.
          All commands available in previous versions of the game are accessible and work properly
          on the Android device.


Split Story B (2 PTS): As a CS 314 student, I want to evaluate my Android GUI with respect to usability,
                  so that I can provide evidence and rationale for subsequent GUI design changes.
    @Acceptance Criteria (AC):
        - Two usability goals are evaluated:
            (a) Efficiency of the user interacting with the user interface to complete a task.
                A typical task related to efficiency might be to explore all rooms. Another task related to
                efficiency might be to find treasure ("gold bars" for example) and bring it out of the cave.
            (b) Effectiveness of the user interface in causing the program to follow the user's intent.
                A typical task related to effectiveness might be to go in a desired direction. Another
                task related to effectiveness might be to pick up and/or drop the desired items.
        - Two questions based on specific user tasks are created for each of the 2 usability goals.
        - Answering all 4 questions generates data that can drive design changes in the GUI, and that can provide rationale for design improvement. No question can be answered with a simple "yes" or "no" answer.
        - Meet 'Definition of Done' (DoD), below.

    @Tasks (estimation/actual time):
            who*(2hrs/1.5hrs) Think up 4 questions that would produce fruitful answers
            who*(2hrs/1hr) Answer Questions / Use application
            who*(1hr/1hr) Type up results in 'overview.txt'
            who*(1hr/1hr) Ensure that DoD and rubric are both met


---------------------------------------------------------------
@ Definition of Done:
For all user stories:

    - GitHub main branch code runs with no warnings and a user can execute all commands at least using the GUI.
    - All code changes are reviewed before being merged onto the main branch (see A1, tutorial 5
        for instructions on the GitHub Pull Request Code Review System you must use for reviews)
    - All code changes are merged into the main branch

For CS314 development:

    - All work is done on individual branches with frequent commits and pushes to GitHub
        before being merged onto the main branch.
    - Commit messages include user story and task
    - All user stories and point estimates are in GitHub
    - All tasks and time estimates and actual time taken are in GitHub
    - The overview.txt file for A4 has all required items in it